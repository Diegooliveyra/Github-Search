(()=>{"use strict";function s(){const s=document.querySelector(".user"),e=document.querySelector(".footer"),t=document.querySelector(".repositories"),n=document.querySelector("[data-loader]");n.classList.remove("hidden"),setTimeout((()=>{n.classList.add("hidden"),e.classList.add("active"),s.classList.add("active"),t.classList.add("active")}),2e3)}function e(s,e){const t=document.querySelector(".user"),n=`\n    <div class="user__avatar">\n    <img src= ${s.avatar_url||"../public/assets/no-found.png"} />\n  </div>\n  <div class="user__profile">\n    <h2>${s.name||""}</h2>\n    <p>@${s.login||""}</p>\n    <div class="user__location">\n      <div>\n      <span class="iconify" data-icon="fa-solid:map-marker-alt" data-inline="false"></span>\n      <p>${s.location||""}</p>\n      </div>\n      <div>\n      ${s.company?'<span class="iconify" data-icon="ic:baseline-business-center" data-inline="false"></span>':""}\n      <p>${s.company||""}</p>\n      </div>\n    </div>\n    <div class="user__data">\n      <span class="iconify" data-icon="fluent:people-team-28-filled" data-inline="false"></span>\n      <p>${s.followers||0}</p>\n      <span class="iconify" data-icon="fluent:people-team-28-regular" data-inline="false"></span>\n      <p>${s.following||0}</p>\n      <span class="iconify" data-icon="dashicons:star-filled" data-inline="false"></span>\n      <p>${e||0}</p>\n    </div>\n  </div>\n  <div class="user__branchs">\n    <h3>Total Repositories</h3>\n    <div class="user__total-branchs">\n      <span class="iconify" data-icon="bx:bx-git-branch" data-inline="false"></span>\n      <p>${s.public_repos||0}</p>\n    </div>\n  </div>\n  `;t.innerHTML=n}async function t(s){const t=e;try{const e=await fetch(s);this.jsonUser=await e.json();const n=await fetch(`${s}/starred`);this.jsonStar=await n.json(),this.totalStar=this.jsonStar.length,t(this.jsonUser,this.totalStar)}catch(s){console.log("Usuario não encontrado",s)}}async function n(s){try{const e=await fetch(`${s}/repos`);this.jsonRepositorie=await e.json(),function(s){const e=document.querySelector(".repositories"),t=s.reduce(((s,e)=>{let t=s;return t+=`<div class="repositories__repositorie">\n    <div class="repositories__content">\n      <h2>${e.name}</h2>\n      <p>${e.description||""}</p>\n    </div>\n    <div class="repositories__info">\n      <span class="iconify" data-icon="dashicons:star-filled" data-inline="false"></span>\n      <p>${e.stargazers_count}</p>\n      <span class="iconify" data-icon="bx:bx-git-branch" data-inline="false"></span>\n      <p>${e.forks}</p>\n    </div>\n  </div>`,t}),"");e.innerHTML=t}(this.jsonRepositorie)}catch(s){console.log("Usuario não encontrado",s)}}new class{constructor(e,a){this.buttonSearch=document.querySelector(e),this.inputValue=a,this.searchPage=document.querySelector(".search"),this.getUserName=this.getUserName.bind(this),this.initLoader=s,this.userFetch=t,this.repositorieFetch=n}getUserName(s){s.preventDefault(),this.userName=document.querySelector(this.inputValue).value,this.url=`https://api.github.com/users/${this.userName}`,this.userName&&(this.initLoader(),this.userFetch(this.url),this.repositorieFetch(this.url),this.searchPage.classList.remove("active"))}getUserEvent(){this.buttonSearch.addEventListener("submit",this.getUserName)}init(){this.getUserEvent(),document.querySelector('[data-back="button"]').addEventListener("click",(()=>{document.location.reload()}))}}(".search__input",'[data-search="name"]').init()})();